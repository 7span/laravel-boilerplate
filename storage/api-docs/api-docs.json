{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/admin/users/{id}/change-status": {
            "post": {
                "tags": [
                    "Admin / User"
                ],
                "summary": "Change user status",
                "operationId": "changeStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true
                    },
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "New status of the user",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user",
                "operationId": "authSignup",
                "parameters": [
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "username",
                                    "country_code",
                                    "mobile_number",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "first_name",
                                        "example": "Test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "last_name",
                                        "example": "User"
                                    },
                                    "username": {
                                        "type": "string",
                                        "format": "username",
                                        "example": "test"
                                    },
                                    "country_code": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@gmail.com"
                                    },
                                    "password": {
                                        "description": "The user's password for login (not stored in plain text, consider using Laravel's `Hash` helper for secure storage).",
                                        "type": "string",
                                        "minLength": 6,
                                        "writeOnly": true
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the user's password.",
                                        "type": "string",
                                        "minLength": 6,
                                        "writeOnly": true
                                    },
                                    "mobile_number": {
                                        "type": "string",
                                        "format": "mobile_number",
                                        "example": "9974572182"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                }
            }
        },
        "/api/v1/send-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send One-Time Password (OTP)",
                "description": "Sends an OTP to a user's email address for verification purposes.",
                "operationId": "sendOtp",
                "requestBody": {
                    "description": "User email and purpose for requesting OTP",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp_for"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "otp_for": {
                                        "type": "string",
                                        "enum": [
                                            "verification",
                                            "reset_password",
                                            "update_profile"
                                        ],
                                        "example": "signup"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                }
            }
        },
        "/api/v1/verify-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify One-Time Password (OTP)",
                "description": "Verifies an OTP submitted by a user for authentication or other purposes.",
                "operationId": "verifyOtp",
                "requestBody": {
                    "description": "User email and OTP code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "otp": {
                                        "description": "OTP code submitted by the user",
                                        "type": "string",
                                        "maxLength": 6,
                                        "minLength": 6,
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login User",
                "description": "Logs in a user with email and password.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User email and password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 8,
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                }
            }
        },
        "/api/v1/forget-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Forget Password",
                "description": "Initiates the process to reset the user's password by sending a reset link to the provided email address.",
                "operationId": "forgetPassword",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "description": "Resets the user's password using the provided email, new password, and OTP code.",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "User email, new password, and OTP code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "description": "User's new password",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the user's new password",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "otp": {
                                        "description": "OTP code sent to the user's email",
                                        "type": "string",
                                        "maxLength": 6,
                                        "minLength": 6,
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                }
            }
        },
        "/api/v1/change-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Change Password",
                "description": "Changes the user's password by verifying the current password and setting a new one.",
                "operationId": "changePassword",
                "requestBody": {
                    "description": "Current password and new password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "description": "User's current password",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 8,
                                        "example": "oldpassword123"
                                    },
                                    "password": {
                                        "description": "User's new password",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the user's new password",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout User",
                "description": "Logs out the currently authenticated user.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Country list",
                "operationId": "countryList",
                "parameters": [
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination limit, '-1' to get all data."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page of results to return."
                    },
                    {
                        "name": "filter[iso]",
                        "in": "query"
                    },
                    {
                        "name": "filter[iso3]",
                        "in": "query"
                    },
                    {
                        "name": "filter[name]",
                        "in": "query"
                    },
                    {
                        "name": "filter[numcode]",
                        "in": "query"
                    },
                    {
                        "name": "filter[phonecode]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get list of languages",
                "operationId": "getLanguages",
                "parameters": [
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/languages/{language_id}": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get detail of languages",
                "operationId": "getLanguageId",
                "parameters": [
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    },
                    {
                        "name": "language_id",
                        "in": "path",
                        "description": "ID of the language",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/generate-signed-url": {
            "post": {
                "tags": [
                    "SignedUrl"
                ],
                "summary": "Generate signed url",
                "operationId": "generate-signed-url",
                "parameters": [
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filename",
                                    "directory",
                                    "mime_type"
                                ],
                                "properties": {
                                    "filename": {
                                        "type": "string",
                                        "format": "filename",
                                        "example": "Test"
                                    },
                                    "directory": {
                                        "type": "string",
                                        "format": "directory",
                                        "example": "User"
                                    },
                                    "mime_type": {
                                        "type": "string",
                                        "format": "mime_type",
                                        "example": "test"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                }
            }
        },
        "/api/v1/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get logged-in user details",
                "operationId": "f5719ff43b3749e6a1457db1b25ddab5",
                "parameters": [
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update Profile",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "X-Requested-With",
                        "in": "header",
                        "description": "Custom header for XMLHttpRequest",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "XMLHttpRequest"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "username",
                                    "email"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "first_name",
                                        "example": "Test"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "last_name",
                                        "example": "User"
                                    },
                                    "username": {
                                        "type": "string",
                                        "format": "username",
                                        "example": "user12"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@gmail.com"
                                    },
                                    "mobile_number": {
                                        "type": "string",
                                        "format": "mobile",
                                        "example": "9090909090"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Validation errors!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "developer": "Spatie\\LittleGateKeeper\\AuthMiddleware"
        }
    ]
}